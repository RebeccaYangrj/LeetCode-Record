class Solution:
    def removeElements(self, head: ListNode, val: int) -> ListNode:
        dummy = ListNode(float("-inf"))
        dummy.next = head
        #we need two printer, one to indicate the previous position and this printer can link to the next next position
        # at beginning the previous is the dummy point 
        #we also need another printer, to move and check if it is equal to the val
        previous, current = dummy, dummy.next 
        
        while current:
            if current.val == val:
                previous.next = current.next 
            else:
                previous = current 
            current = current.next
        
        # not return head in case the head will be removed
        return dummy.next 
        # time complexity is O(n)
        
        
  """
  two printer: pre and cur, x.next is connection x = y.next is assign value
  use dummy.next to return the initial 
  """
